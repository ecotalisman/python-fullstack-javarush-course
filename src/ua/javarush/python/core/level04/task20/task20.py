# Using a nonlocal Variable

# Write a program that contains a nested function.
# The outer function outer_function() should declare a variable x and assign it the value 10.
# The inner function inner_function() should increase the value of x by 5 using the nonlocal statement.
# Then call the inner function and print the value of x in the outer function.

### üá∫üá¶ Ukrainian version:

# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è nonlocal –∑–º—ñ–Ω–Ω–æ—ó

# –ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ–≥—Ä–∞–º—É, –≤ —è–∫—ñ–π —î –≤–∫–ª–∞–¥–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è.
# –ó–æ–≤–Ω—ñ—à–Ω—è —Ñ—É–Ω–∫—Ü—ñ—è outer_function() –º–∞—î –æ–≥–æ–ª–æ—à—É–≤–∞—Ç–∏ –∑–º—ñ–Ω–Ω—É x —ñ –ø—Ä–∏—Å–≤–æ—é–≤–∞—Ç–∏ —ó–π –∑–Ω–∞—á–µ–Ω–Ω—è 10.
# –í–Ω—É—Ç—Ä—ñ—à–Ω—è —Ñ—É–Ω–∫—Ü—ñ—è inner_function() –ø–æ–≤–∏–Ω–Ω–∞ –∑–±—ñ–ª—å—à—É–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó x –Ω–∞ 5, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä nonlocal.
# –ü–æ—Ç—ñ–º –≤–∏–∫–ª–∏—á—Ç–µ –≤–Ω—É—Ç—Ä—ñ—à–Ω—é —Ñ—É–Ω–∫—Ü—ñ—é —ñ –≤–∏–≤–µ–¥—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó x —É –∑–æ–≤–Ω—ñ—à–Ω—ñ–π —Ñ—É–Ω–∫—Ü—ñ—ó.

# Write your code here
def outer_function():
    x = 10
    def inner_function():
        nonlocal x
        x += 5
        return x

    return print(inner_function())

outer_function()