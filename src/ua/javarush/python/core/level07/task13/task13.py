# Dictionary Traversal

# Write a program that creates a dictionary with information about a person (e.g., name, age, address, and contact information).
# The program should:
# Traverse all elements of the dictionary, including nested dictionaries, using loops.
# Implement a function to traverse all levels of nesting and print keys and values.

### üá∫üá¶ Ukrainian version:

# –û–±—Ö—ñ–¥ —Å–ª–æ–≤–Ω–∏–∫–∞.

# –ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ–≥—Ä–∞–º—É, —è–∫–∞ —Å—Ç–≤–æ—Ä—é—î —Å–ª–æ–≤–Ω–∏–∫ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –ª—é–¥–∏–Ω—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —ñ–º'—è, –≤—ñ–∫, –∞–¥—Ä–µ—Å–∞, —Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è).
# –ü—Ä–æ–≥—Ä–∞–º–∞ –ø–æ–≤–∏–Ω–Ω–∞:
# –ü–µ—Ä–µ–±—Ä–∞—Ç–∏ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —Å–ª–æ–≤–Ω–∏–∫–∞, –≤–∫–ª—é—á–∞—é—á–∏ –≤–∫–ª–∞–¥–µ–Ω—ñ —Å–ª–æ–≤–Ω–∏–∫–∏, –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º —Ü–∏–∫–ª—ñ–≤.
# –†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –æ–±—Ö–æ–¥—É –≤—Å—ñ—Ö —Ä—ñ–≤–Ω—ñ–≤ –≤–∫–ª–∞–¥–µ–Ω–æ—Å—Ç—ñ —Ç–∞ –≤–∏–≤–æ–¥—É –∫–ª—é—á—ñ–≤ —ñ –∑–Ω–∞—á–µ–Ω—å.

# Write your code here
person = {
    "name": "John", "age": 20,
    "address": {
        "street": "205 Street",
        "zip": 20,
        "contact": {
            "e-mail": "info@gmail.com",
            "Tel.": 5552211
        }
    }
}


def print_dict(d, indent=0):
    for k, v in d.items():
        print(" " * indent + str(k) + ": ", end="")
        if isinstance(v, dict):
            print()
            print_dict(v, indent + 1)
        else:
            print(v)


print_dict(person)
