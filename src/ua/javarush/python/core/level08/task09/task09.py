# Decorator

# Write a program that creates a simple decorator for logging function calls.
# The program should:
# Define a decorator log_decorator that prints a message before and after the function call.
# Apply the decorator to the greet() function, which prints a greeting message.
# Call the greet() function.

### üá∫üá¶ Ukrainian version:

# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä.

# –ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ–≥—Ä–∞–º—É, —è–∫–∞ —Å—Ç–≤–æ—Ä—é—î –ø—Ä–æ—Å—Ç–∏–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –≤–∏–∫–ª–∏–∫—ñ–≤ —Ñ—É–Ω–∫—Ü—ñ—ó.
# –ü—Ä–æ–≥—Ä–∞–º–∞ –ø–æ–≤–∏–Ω–Ω–∞:
# –í–∏–∑–Ω–∞—á–∏—Ç–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä log_decorator, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø–µ—Ä–µ–¥ —Ç–∞ –ø—ñ—Å–ª—è –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó.
# –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–æ —Ñ—É–Ω–∫—Ü—ñ—ó greet(), —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å –ø—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
# –í–∏–∫–ª–∏–∫–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é greet().

# Write your code here
def log_decorator(func):
    def wrapper():
        print("Before")
        func()
        print("After")

    return wrapper

@log_decorator
def greet():
    print("Hello!")

greet()