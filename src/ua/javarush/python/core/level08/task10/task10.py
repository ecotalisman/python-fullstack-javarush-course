# Repeat Decorator

# Write a program that creates a decorator to call a function multiple times.
# The program should:
# Define a decorator repeat(num_times) that takes the number of repetitions as an argument.
# Apply the decorator to the say_hello(name) function, which prints a greeting message.
# Call the say_hello(name) function.

### üá∫üá¶ Ukrainian version:

# –ë–∞–≥–∞—Ç–æ—Ä–∞–∑–æ–≤–∏–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä.

# –ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ–≥—Ä–∞–º—É, —è–∫–∞ —Å—Ç–≤–æ—Ä—é—î –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó –∑–∞–¥–∞–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–∞–∑—ñ–≤.
# –ü—Ä–æ–≥—Ä–∞–º–∞ –ø–æ–≤–∏–Ω–Ω–∞:
# –í–∏–∑–Ω–∞—á–∏—Ç–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä repeat(num_times), —è–∫–∏–π –ø—Ä–∏–π–º–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä—ñ–≤ —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç.
# –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–æ —Ñ—É–Ω–∫—Ü—ñ—ó say_hello(name), —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å –ø—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
# –í–∏–∫–ª–∏–∫–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é say_hello(name).

# Write your code here
def repeat(num_times):
    def decorator_repeat(func):
        def wrapper(*args, **kwargs):
            for _ in range(num_times):
                func(*args, **kwargs)

        return wrapper

    return  decorator_repeat

@repeat(num_times=3)
def say_hello(name):
    print(f"Hello, {name}")

say_hello("World!")
