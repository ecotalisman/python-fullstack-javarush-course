# Banker

# Create a class BankAccount with a constructor that takes parameters account_number and initial_balance.
# Add a method deposit(amount) that adds funds to the account,
# and a method withdraw(amount) that withdraws funds from the account.
# Create an object of this class and perform several deposit and withdrawal operations.

### üá∫üá¶ Ukrainian version:

# –ë–∞–Ω–∫—ñ—Ä.

# –°—Ç–≤–æ—Ä—ñ—Ç—å –∫–ª–∞—Å BankAccount –∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º, —è–∫–∏–π –ø—Ä–∏–π–º–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ account_number —Ç–∞ initial_balance.
# –î–æ–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥ deposit(amount), —è–∫–∏–π –ø–æ–ø–æ–≤–Ω—é—î —Ä–∞—Ö—É–Ω–æ–∫, —ñ –º–µ—Ç–æ–¥ withdraw(amount), —è–∫–∏–π –∑–Ω—ñ–º–∞—î –∫–æ—à—Ç–∏ –∑ —Ä–∞—Ö—É–Ω–∫—É.
# –°—Ç–≤–æ—Ä—ñ—Ç—å –æ–±'—î–∫—Ç —Ü—å–æ–≥–æ –∫–ª–∞—Å—É —Ç–∞ –≤–∏–∫–æ–Ω–∞–π—Ç–µ –∫—ñ–ª—å–∫–∞ –æ–ø–µ—Ä–∞—Ü—ñ–π –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è —Ç–∞ –∑–Ω—è—Ç—Ç—è –∫–æ—à—Ç—ñ–≤.

# Write your code here
class BankAccount:
    def __init__(self, account_number, initial_balance):
        self.account_number = account_number
        self.balance = initial_balance

    def deposit(self, amount):
        self.balance = self.balance + amount
        return self.balance

    def withdraw(self, amount):
        self.balance = self.balance - amount
        if self.balance < 0:
            raise ValueError("Insufficient funds!")
        return self.balance


try:
    acc = BankAccount(1, 100)
    print(acc.deposit(1000))
    print(acc.withdraw(200))
    print(acc.withdraw(1000))
except ValueError as e:
    print(e)
