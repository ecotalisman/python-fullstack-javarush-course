# Supercars

# Create a base class Vehicle that has attributes brand and model.
# Then create a child class Car that inherits from Vehicle and adds the attribute fuel_type.
# Use the super() method to call the constructor of the base class.

### üá∫üá¶ Ukrainian version:

# –°—É–ø–µ—Ä–º–∞—à–∏–Ω–∏.

# –°—Ç–≤–æ—Ä—ñ—Ç—å –±–∞–∑–æ–≤–∏–π –∫–ª–∞—Å Vehicle, —è–∫–∏–π –±—É–¥–µ –º–∞—Ç–∏ –∞—Ç—Ä–∏–±—É—Ç–∏ brand —ñ model.
# –ü–æ—Ç—ñ–º —Å—Ç–≤–æ—Ä—ñ—Ç—å –¥–æ—á—ñ—Ä–Ω—ñ–π –∫–ª–∞—Å Car, —è–∫–∏–π –±—É–¥–µ –Ω–∞—Å–ª—ñ–¥—É–≤–∞—Ç–∏ –≤—ñ–¥ Vehicle —ñ –¥–æ–¥–∞–≤–∞—Ç–∏ –∞—Ç—Ä–∏–±—É—Ç fuel_type.
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –º–µ—Ç–æ–¥ super() –¥–ª—è –≤–∏–∫–ª–∏–∫—É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—É.

# Write your code here
class Vehicle:
    def __init__(self, brand, model):
        self.brand = brand
        self.model = model

class Car(Vehicle):
    def __init__(self, brand, model, fuel_type):
        super().__init__(brand, model)
        self.fuel_type = fuel_type

car = Car("BMW", "X5", "Diesel")
print(car.brand)
print(car.model)
print(car.fuel_type)