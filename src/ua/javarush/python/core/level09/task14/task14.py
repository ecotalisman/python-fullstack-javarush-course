# Motor Pool

# Write a function check_subclass to check whether one class is a subclass of another.
# Use the issubclass() function to perform the check.
# Then create classes Vehicle, Car, and Bicycle, and check whether Car and Bicycle are subclasses of Vehicle.

### üá∫üá¶ Ukrainian version:

# –ê–≤—Ç–æ–ø–∞—Ä–∫.

# –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é check_subclass –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —á–∏ —î –æ–¥–∏–Ω –∫–ª–∞—Å –ø—ñ–¥–∫–ª–∞—Å–æ–º —ñ–Ω—à–æ–≥–æ.
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ñ—É–Ω–∫—Ü—ñ—é issubclass() –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏.
# –ü–æ—Ç—ñ–º —Å—Ç–≤–æ—Ä—ñ—Ç—å –∫–ª–∞—Å–∏ Vehicle, Car, Bicycle, —ñ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —á–∏ —î Car —ñ Bicycle –ø—ñ–¥–∫–ª–∞—Å–∞–º–∏ Vehicle.

# Write your code here
class Vehicle():
    pass

class Car(Vehicle):
    pass

class Bicycle(Vehicle):
    pass

def check_subclass(cls_1, cls_2):
    return print(issubclass(cls_1, cls_2))

check_subclass(Car, Vehicle)
check_subclass(Bicycle, Vehicle)
