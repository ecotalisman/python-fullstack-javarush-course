# Super Action

# Create two base classes BaseA and BaseB, each with an action() method.
# Create a derived class Derived with an overridden action() method that calls super().action().
# Call the action() method on an object of the Derived class and analyze the order of method calls.

### üá∫üá¶ Ukrainian version:

# –°—É–ø–µ—Ä-–µ–∫—à–µ–Ω.

# –°—Ç–≤–æ—Ä—ñ—Ç—å –¥–≤–∞ –±–∞–∑–æ–≤—ñ –∫–ª–∞—Å–∏ BaseA —ñ BaseB, –∫–æ–∂–µ–Ω –∑ —è–∫–∏—Ö –º–∞—î –º–µ—Ç–æ–¥ action().
# –°—Ç–≤–æ—Ä—ñ—Ç—å –ø–æ—Ö—ñ–¥–Ω–∏–π –∫–ª–∞—Å Derived –∑ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–∏–º –º–µ—Ç–æ–¥–æ–º action(), —è–∫–∏–π –≤–∏–∫–ª–∏–∫–∞—î –º–µ—Ç–æ–¥ super().action().
# –í–∏–∫–ª–∏—á—Ç–µ –º–µ—Ç–æ–¥ action() —É –æ–±'—î–∫—Ç–∞ –∫–ª–∞—Å—É Derived —ñ –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π—Ç–µ –ø–æ—Ä—è–¥–æ–∫ –≤–∏–∫–ª–∏–∫—É –º–µ—Ç–æ–¥—ñ–≤.

# Write your code here
class BaseA:
    def action(self):
        print("class BaseA")

class BaseB:
    def action(self):
        print("class BaseB")

class Derived(BaseA, BaseB):
    def action(self):
        print("class Derived")
        super().action()

obj = Derived()
obj.action()
