# Method Overriding

# Create classes M, N, and O, where N and O inherit from M.
# In each class, define a method action that prints the class name
# and calls the parent class method using super().
# Check the order of method calls by creating an instance of class N and calling the action method.

### üá∫üá¶ Ukrainian version:

# –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –º–µ—Ç–æ–¥—É

# –°—Ç–≤–æ—Ä—ñ—Ç—å –∫–ª–∞—Å–∏ M, N —Ç–∞ O, –¥–µ N —ñ O —É—Å–ø–∞–¥–∫–æ–≤—É—é—Ç—å –≤—ñ–¥ M.
# –£ –∫–æ–∂–Ω–æ–º—É –∫–ª–∞—Å—ñ –≤–∏–∑–Ω–∞—á—Ç–µ –º–µ—Ç–æ–¥ action, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —ñ–º'—è –∫–ª–∞—Å—É
# —Ç–∞ –≤–∏–∫–ª–∏–∫–∞—î –º–µ—Ç–æ–¥ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ –∫–ª–∞—Å—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é super().
# –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–æ—Ä—è–¥–æ–∫ –≤–∏–∫–ª–∏–∫—É –º–µ—Ç–æ–¥—ñ–≤, —Å—Ç–≤–æ—Ä–∏–≤—à–∏ –µ–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—É N —ñ –≤–∏–∫–ª–∏–∫–∞–≤—à–∏ –º–µ—Ç–æ–¥ action.

# Write your code here
class M:
    def action(self):
        print("M")

class N(M):
    def action(self):
        super().action()
        print("N")

class O(M):
    def action(self):
        super().action()
        print("O")

obj = N()
obj.action()