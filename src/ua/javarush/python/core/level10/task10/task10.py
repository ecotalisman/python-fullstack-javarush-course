# Stack Trace Analysis

# Write a function complex_operation that calls several nested functions and may raise an exception.
# If an exception occurs, catch it and extract the raw stack trace information
# using traceback.extract_tb().
# Print information about each stack frame (file, line, function name, line text).

### üá∫üá¶ Ukrainian version:

# –ê–Ω–∞–ª—ñ–∑ —Å—Ç–µ–∫-—Ç—Ä–µ–π—Å

# –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é complex_operation, —è–∫–∞ –≤–∏–∫–ª–∏–∫–∞—î –¥–µ–∫—ñ–ª—å–∫–∞ –≤–∫–ª–∞–¥–µ–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π —ñ –º–æ–∂–µ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –≤–∏–∫–ª—é—á–µ–Ω–Ω—è.
# –Ø–∫—â–æ –≤–∏–Ω–∏–∫–∞—î –≤–∏–∫–ª—é—á–µ–Ω–Ω—è, –ø–µ—Ä–µ—Ö–æ–ø—ñ—Ç—å –π–æ–≥–æ —ñ –≤–∏—Ç—è–≥–Ω—ñ—Ç—å "—Å–∏—Ä—ñ" –≤—ñ–¥–æ–º–æ—Å—Ç—ñ –ø—Ä–æ
# —Ç—Ä–∞—Å—É–≤–∞–Ω–Ω—è —Å—Ç–µ–∫–∞ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º traceback.extract_tb().
# –í–∏–≤–µ–¥—ñ—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ–∂–µ–Ω —Ñ—Ä–µ–π–º —Å—Ç–µ–∫–∞ (—Ñ–∞–π–ª, —Ä—è–¥–æ–∫, —ñ–º'—è —Ñ—É–Ω–∫—Ü—ñ—ó, —Ç–µ–∫—Å—Ç —Ä—è–¥–∫–∞).

# Write your code here
import sys
import traceback


def function_a():
    return 1 / 0

def function_b():
    function_a()

def complex_operation():
    try:
        function_b()
    except ZeroDivisionError:
        tb = sys.exc_info()[2]
        for frame in traceback.extract_tb(tb):
            print(f"File: {frame.filename}")
            print(f"Line: {frame.lineno}")
            print(f"Function: {frame.name}")
            print(f"Text: {frame.line}")
            print("-" * 40)

complex_operation()
