# Custom Exception

# Create a custom exception InvalidAgeError that will be raised in the check_age function
# if the age is less than 0 or greater than 150. Handle this exception in a try-except block.

### üá∫üá¶ Ukrainian version:

# –ö–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–µ –≤–∏–∫–ª—é—á–µ–Ω–Ω—è

# –°—Ç–≤–æ—Ä—ñ—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–µ –≤–∏–∫–ª—é—á–µ–Ω–Ω—è InvalidAgeError, —è–∫–µ –±—É–¥–µ –≤–∏–∫–ª–∏–∫–∞—Ç–∏—Å—è —É —Ñ—É–Ω–∫—Ü—ñ—ó check_age,
# —è–∫—â–æ –≤—ñ–∫ –º–µ–Ω—à–µ 0 –∞–±–æ –±—ñ–ª—å—à–µ 150. –û–±—Ä–æ–±—ñ—Ç—å —Ü–µ –≤–∏–∫–ª—é—á–µ–Ω–Ω—è –≤ –±–ª–æ—Ü—ñ try-except.

# Write your code here
class InvalidAgeError(ValueError):
    pass

def check_age(num):
    if not (0 <= num <= 150):
        raise InvalidAgeError(f"Invalid age: {num}. Allowed range is 0 to 150")

try:
    age = int(input("Enter your age: "))
    check_age(age)
    print("Age is valid.")
except InvalidAgeError as e:
    print(e)
except ValueError:
    print("Please enter a valid integer for age.")
