# Default Parameters

# Write 2 functions: def foo(bar=[]) and foo_correct(bar=None).
# Each function takes a list and adds the element "baz" to it.
# If the list is not passed, the function should use a new empty list.
# Show how using a mutable object as a default value can lead to unexpected behavior,
# and fix this in the second function.

### üá∫üá¶ Ukrainian version:

# –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º.

# –ù–∞–ø–∏—à—ñ—Ç—å 2 —Ñ—É–Ω–∫—Ü—ñ—ó: def foo(bar=[]) —ñ foo_correct(bar=None).
# –ö–æ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –ø—Ä–∏–π–º–∞—î —Å–ø–∏—Å–æ–∫ —ñ –¥–æ–¥–∞—î –¥–æ –Ω—å–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç "baz".
# –Ø–∫—â–æ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∏–π, —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–π –ø–æ—Ä–æ–∂–Ω—ñ–π —Å–ø–∏—Å–æ–∫.
# –ü–æ–∫–∞–∂—ñ—Ç—å, —è–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑–º—ñ–Ω—é–≤–∞–Ω–æ–≥–æ –æ–±'—î–∫—Ç–∞ —è–∫ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –º–æ–∂–µ –ø—Ä–∏–∑–≤–µ—Å—Ç–∏ –¥–æ –Ω–µ—Å–ø–æ–¥—ñ–≤–∞–Ω–æ—ó –ø–æ–≤–µ–¥—ñ–Ω–∫–∏,
# —ñ –≤–∏–ø—Ä–∞–≤—Ç–µ —Ü–µ (—É –¥—Ä—É–≥—ñ–π —Ñ—É–Ω–∫—Ü—ñ—ó).

# Write your code here
def foo(bar=[]):
    bar.append("baz")
    return bar

def foo_correct(bar=None):
    if bar is None:
        bar = []
    bar.append("baz")
    return bar

print(foo())
print(foo())
print(foo())

# Checking the corrected function
print(foo_correct())  # –í–∏–≤–æ–¥–∏—Ç—å: ['baz']
print(foo_correct())  # –í–∏–≤–æ–¥–∏—Ç—å: ['baz']
print(foo_correct())  # –í–∏–≤–æ–¥–∏—Ç—å: ['baz']

# Checking with passing a list
lst = [1, 2, 3]
print(foo_correct(lst))  # –í–∏–≤–æ–¥–∏—Ç—å: [1, 2, 3, "baz"]
print(foo_correct(lst))  # –í–∏–≤–æ–¥–∏—Ç—å: [1, 2, 3, "baz", "baz"]