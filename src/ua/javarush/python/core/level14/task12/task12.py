# Cancelling a Task

# Write an asynchronous program that creates a task which waits for 5 seconds.
# Start it, wait 1 second, then cancel the task and print a message about its cancellation.
# Handle the CancelledError exception.

### üá∫üá¶ Ukrainian version:

# –°–∫–∞—Å—É–≤–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ

# –ù–∞–ø–∏—à—ñ—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É –ø—Ä–æ–≥—Ä–∞–º—É, —è–∫–∞ —Å—Ç–≤–æ—Ä—é—î –∑–∞–¥–∞—á—É, —â–æ –≤–∏–∫–æ–Ω—É—î –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è 5 —Å–µ–∫—É–Ω–¥.
# –ó–∞–ø—É—Å—Ç—ñ—Ç—å —ó—ó, –ø–æ—á–µ–∫–∞–π—Ç–µ 1 —Å–µ–∫—É–Ω–¥—É, –ø–æ—Ç—ñ–º —Å–∫–∞—Å—É–π—Ç–µ –∑–∞–¥–∞—á—É —ñ –≤–∏–≤–µ–¥—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —ó—ó —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è.
# –û–±—Ä–æ–±—ñ—Ç—å –≤–∏–Ω—è—Ç–æ–∫ CancelledError.

# Write your code here
import asyncio

async def main():
    t = asyncio.create_task(asyncio.sleep(5))
    await asyncio.sleep(1)
    t.cancel()
    try:
        await t
    except asyncio.CancelledError:
        print("Task was cancelled")


asyncio.run(main())
