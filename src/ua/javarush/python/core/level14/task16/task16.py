# Asynchronous Context Manager for File Operations

# Use the aiofiles library to create an asynchronous context manager
# that opens a file, writes the string "Asynchronous write to file" into it, and then closes the file.

### üá∫üá¶ Ukrainian version:

# –ê–ö–ú –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ñ–∞–π–ª–∞–º–∏

# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É aiofiles –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞,
# —è–∫–∏–π –±—É–¥–µ –≤—ñ–¥–∫—Ä–∏–≤–∞—Ç–∏ —Ñ–∞–π–ª, –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ –≤ –Ω—å–æ–≥–æ —Ä—è–¥–æ–∫ "–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π –∑–∞–ø–∏—Å —É —Ñ–∞–π–ª" —ñ –∑–∞–∫—Ä–∏–≤–∞—Ç–∏ —Ñ–∞–π–ª.

# Write your code here
import asyncio, aiofiles

async def main():
    async with aiofiles.open("example.txt", "w") as f:
        await f.write("–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π –∑–∞–ø–∏—Å —É —Ñ–∞–π–ª")

asyncio.run(main())
