# Using Multiprocessing

# Write a program that creates 4 parallel processes.
# Each process should print its name and the current process ID.
# Use the multiprocessing module.

### üá∫üá¶ Ukrainian version:

# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –±–∞–≥–∞—Ç–æ–ø—Ä–æ—Ü–µ—Å–æ—Ä–Ω–æ—Å—Ç—ñ

# –ù–∞–ø–∏—à—ñ—Ç—å –ø—Ä–æ–≥—Ä–∞–º—É, —è–∫–∞ —Å—Ç–≤–æ—Ä—é—î 4 –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ –ø—Ä–æ—Ü–µ—Å–∏.
# –ö–æ–∂–µ–Ω –ø—Ä–æ—Ü–µ—Å –ø–æ–≤–∏–Ω–µ–Ω –¥—Ä—É–∫—É–≤–∞—Ç–∏ —Å–≤–æ—î —ñ–º'—è —Ç–∞ –ø–æ—Ç–æ—á–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –ø—Ä–æ—Ü–µ—Å—É.
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –º–æ–¥—É–ª—å multiprocessing.

# Write your code here
import multiprocessing as mp
import os

def worker(num):
    proc = mp.current_process()
    print(f"Worker arg: {num} | name: {proc.name} | pid: {os.getpid()}")

def main():
    processes = []
    for i in range(4):
        p = mp.Process(target=worker, args=(i,), name=f"Worker-{i}")
        processes.append(p)
        p.start()

    for p in processes:
        p.join()

if __name__ == "__main__":
    main()
