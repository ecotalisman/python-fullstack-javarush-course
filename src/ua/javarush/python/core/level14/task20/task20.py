# Asynchronous Programming

# Write an asynchronous program that runs 30 tasks in parallel.
# Each task should wait for 2 seconds and then print its message "Task n done", where n is the task number.
# Use the asyncio module.

### üá∫üá¶ Ukrainian version:

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è

# –ù–∞–ø–∏—à—ñ—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É –ø—Ä–æ–≥—Ä–∞–º—É, —è–∫–∞ –≤–∏–∫–æ–Ω—É—î 30 –∑–∞–¥–∞—á –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ.
# –ö–æ–∂–Ω–∞ –∑–∞–¥–∞—á–∞ –º–∞—î –æ—á—ñ–∫—É–≤–∞—Ç–∏ 2 —Å–µ–∫—É–Ω–¥–∏ —ñ –ø–æ—Ç—ñ–º –≤–∏–≤–æ–¥–∏—Ç–∏ —Å–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "Task n done", –¥–µ n - –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á—ñ.
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –º–æ–¥—É–ª—å asyncio.

# Write your code here
import asyncio


async def worker(n):
    await asyncio.sleep(2)
    print(f"Task {n} done")


async def main():
    async with asyncio.TaskGroup() as tg:
        for n in range(1, 31):
            tg.create_task(worker(n))


asyncio.run(main())
