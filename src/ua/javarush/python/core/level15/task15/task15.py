# Sorting Time Estimation

# Write a program that estimates how long it would take to sort 1 billion numbers
# using three algorithms with the following time complexities:
# 1) 100 * n * ln(n)
# 2) 10 * n^2
# 3) n^3
# Print these three values.

### üá∫üá¶ Ukrainian version:

# –†–∞—Ö—É–Ω–æ–∫ —á–∞—Å—É —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è

# –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º—É, —è–∫–∞ –±—É–¥–µ —Ä–∞—Ö—É–≤–∞—Ç–∏, —Å–∫—ñ–ª—å–∫–∏ —Ç—Ä–∏–≤–∞—Ç–∏–º–µ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è 1 –º–ª—Ä–¥ —á–∏—Å–µ–ª —Ç—Ä—å–æ–º–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º–∏.
# –°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å –ø–µ—Ä—à–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º—É: 100 * n * ln(n).
# –°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å –¥—Ä—É–≥–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º—É: 10 * n^2.
# –°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å —Ç—Ä–µ—Ç—å–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º—É: n^3.
# –í–∏–≤–µ–¥—ñ—Ç—å —Ç—Ä–∏ —Ü—ñ —á–∏—Å–ª–∞ –Ω–∞ –µ–∫—Ä–∞–Ω.

# Write your code here
from math import log

n = 1_000_000_000

a = 100 * n * log(n)
b = 10 * (n ** 2)
c = n ** 3

print(a)
print(b)
print(c)
